version: 2

defaults: &defaults
  working_directory: ~/circleci-champaign-ak-processor
  docker:
    - image: soutech/ruby2.4.1_node_awscli:0.2

jobs:
  install_dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          name: Restoring bundler cache
          key: gem-cache-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install gems
          command: bundle install --jobs 4 --deployment
      - save_cache:
          key: gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
          - vendor/bundle
      - persist_to_workspace:
          root: .
          paths:
            - vendor/bundle
            - .bundle

  rspec:
    docker:
      - image: soutech/ruby2.4.1_node_awscli:0.2
        environment:
          PG_USERNAME: champaign
          PG_PASSWORD: champaign
          RAILS_ENV: test
          AK_HOST: https://act.sumofus.org/rest/v1
          AK_USERNAME: ak_username
          AK_PASSWORD: ak_password
          HPC_RULE_ID: 22
          AK_SUBSCRIPTION_PAGE_EN: 'registration'
          AK_SUBSCRIPTION_PAGE_DE: 'registration_german'
          AK_SUBSCRIPTION_PAGE_FR: 'registration_french'
          AWS_REGION: us-west-2
          CONSTITUENCIES_TABLE: UkConstituencies
      - image: circleci/postgres:9.4-alpine-ram
        environment:
          POSTGRES_USER: champaign
          POSTGRES_DB: champaign_test
      - image: redis
    steps:
      - checkout
      - attach_workspace:
          at: ~/circleci-champaign-ak-processor
      - run:
          name: Bundler
          command: bundle --path vendor/bundle
      - run:
          name: Run specs
          command: bundle exec rspec spec

  build_docker_image:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/circleci-champaign-ak-processor
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Docker build
          command: .circleci/build.sh

  deploy_production:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/circleci-champaign-ak-processor
      - run:
          name: Deploy production
          command: .circleci/deploy.sh $CIRCLE_SHA1 'champaign' 'ak-worker-production' 'logs3.papertrailapp.com:44107'

  deploy_staging:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: ~/circleci-champaign-ak-processor
      - run:
          name: Deploy staging
          command: .circleci/deploy.sh $CIRCLE_SHA1 'champaign' 'ak-worker-staging' 'logs3.papertrailapp.com:34848'

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - install_dependencies

      - rspec:
          requires:
            - install_dependencies

      - build_docker_image:
          filters:
            branches:
              only:
                - master
                - development
                - /^feature(?:\/|-|\.).+$/

      - deploy_production:
          requires:
            - build_docker_image
            - rspec
          filters:
            branches:
              only:
                - master

      - deploy_staging:
          requires:
            - build_docker_image
            - rspec
          filters:
            branches:
              only:
                - feature.circleci-2

# OLD BELOW THIS

machine:
  services:
    - docker

dependencies:
  override:
    - docker info
    # our circle setup uses compose - install it
    - sudo pip install --upgrade docker-compose==1.2.0
    # install AWS CLI
    - sudo pip install awscli
    # build the image
    - docker build -t soutech/champaign-ak-processor:$CIRCLE_SHA1 .

test:
  override:
    # tests the built image
    - cat docker-compose-template.yml | envsubst > docker-compose.yml
    - cat Dockerrun.aws.json.template | envsubst > Dockerrun.aws.json
    - annotate-output docker-compose -f docker-compose.yml run processor

database:
  override:
    - echo "Look in run-tests for database setup for testing environment."

deployment:
  production:
  # push to Docker Hub and deploy new version on AWS
    branch: master
    commands:
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker push soutech/champaign-ak-processor
      - ./deploy.sh $CIRCLE_SHA1 'champaign' 'ak-worker-production' 'logs3.papertrailapp.com:44107'
  staging:
    branch: development
    commands:
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker push soutech/champaign-ak-processor
      - ./deploy.sh $CIRCLE_SHA1 'champaign' 'ak-worker-staging' 'logs3.papertrailapp.com:34848'


